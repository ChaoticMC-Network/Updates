command /dueladm [<text=help>] [<text>]:
	trigger:
		if player is op:
			if arg 1 is "help":
				message "/dueladm create (Name of Arena)"
				message "/dueladm remove (Name of Arena)"
				message "/dueladm setspawn1 (Name of Arena)"
				message "/dueladm setspawn2 (Name of Arena)"
				message "/dueladm setkit (Name of Arena)"
				message "/dueladm setlobby"
				message "/dueladm list"
				stop
			
			if arg 1 is "create":
				if arg 2 is set:
					if {duel.arena.%arg 2%} is not set:
						set {duel.arena.%arg 2%} to true
						set {duel.arena.setup.%arg 2%} to false
						set {duel.arena.use.%arg 2%} to false
						add arg 2 to {duel.arena.list::*}
						clear {duel.arena.spawn1.%arg 2%} 
						clear {duel.arena.spawn2.%arg 2%} 
						message "&7Successfully create arena &6%arg-2%"
						stop
					else:
						message "&7Error, Arena &6%arg-2% &7already exists"
						stop
				else:
					message "Correct Usage: /dueladm create (Name of Arena)"
					stop
					
			if arg 1 is "remove":
				if arg 2 is set:
					if {duel.arena.%arg 2%} is true:
						clear {duel.arena.%arg 2%}
						clear {duel.arena.setup.%arg 2%}
						clear {duel.arena.use.%arg 2%} 
						clear {duel.arena.spawn1.%arg 2%} 
						clear {duel.arena.spawn2.%arg 2%} 
						remove arg 2 from {duel.arena.list::*}
						loop 36 times:
							clear {duel-kit.%{_count}%.main.%arg 2%}
							add 1 to {_count}
						wait 1 tick
						clear {duel-kit.helmet.%arg 2%} 
						clear {duel-kit.chestplate.%arg 2%} 
						clear {duel-kit.leggings.%arg 2%} 
						clear {duel-kit.boots.%arg 2%} 
						message "&7Successfully removed arena &6%arg-2%"
						stop
					else:
						message "&7Error, Arena &6%arg-2% &7does not exisits"
						stop
				else:
					message "Correct Usage: /dueladm remove (Name of Arena)"
					stop
					
			if arg 1 is "setspawn1":
				if arg 2 is set:
					if {duel.arena.%arg 2%} is true:
						set {duel.arena.spawn1.%arg 2%} to location of player
						message "&7Spawn1 for arena &6%arg-2% &7has been set"
						if {duel.arena.spawn2.%arg 2%} is set:
							set {duel.arena.setup.%arg 2%} to true
						stop
					else:
						message "&7Error, Arena &6%arg-2% &7does not exist"
						stop
				else:
					message "Correct Usage: /dueladm setspawn1 (Name of Arena)"
					stop	

			if arg 1 is "setspawn2":
				if arg 2 is set:
					if {duel.arena.%arg 2%} is true:
						set {duel.arena.spawn2.%arg 2%} to location of player
						message "&7Spawn2 &7for arena &6%arg-2% &7has been set"
						if {duel.arena.spawn1.%arg 2%} is set:
							set {duel.arena.setup.%arg 2%} to true
						stop
					else:
						message "&7Error, Arena &6%arg-2% &7does not exist."
						stop
				else:
					message "Correct Usage: /dueladm setspawn2 (Name of Arena)"
					stop

			if arg 1 is "setkit":
				if arg 2 is set:
					if {duel.arena.%arg 2%} is true:
						set {_count} to 0
						wait 1 tick
						loop 36 times:
							set {duel-kit.%{_count}%.main.%arg 2%} to slot {_count} of player's inventory
							add 1 to {_count}
							wait 1 tick
						set {duel-kit.helmet.%arg 2%} to player's helmet
						set {duel-kit.chestplate.%arg 2%} to player's chestplate
						set {duel-kit.leggings.%arg 2%} to player's leggings
						set {duel-kit.boots.%arg 2%} to player's boots
						wait 1 tick
						clear player's inventory
						wait 1 tick
						set {_count} to 0
						wait 1 tick
						loop 36 times:
							set slot {_count} of player's inventory to {duel-kit.%{_count}%.main.%arg 2%}
							add 1 to {_count}
							wait 0.5 tick
						set the helmet of player to {duel-kit.helmet.%arg 2%}
						set the chestplate of player to {duel-kit.chestplate.%arg 2%}
						set the leggings of player to {duel-kit.leggings.%arg 2%}
						set the boots of player to {duel-kit.boots.%arg 2%}
						message "&7Successfully saved kit for Arena &6%arg-2%"
						stop
					else:
						message "&7Error, Arena &6%arg-2% &7does not exist"
						stop
				else:
					message "Correct Usage: /dueladm setkit (Name of Arena)"
					stop		
					
			if arg 1 is "setlobby":
				set {duel.lobby} to location of player
				message "{@prefix} Lobby placé en %location of player%"
				stop
				
			if arg 1 is "list":
				clear {_list::*}
				loop {duel.arena.list::*}:
					if {duel.arena.use.%loop-value%} is true:
						add "&c%loop-value%" to {_list::*}
					if {duel.arena.use.%loop-value%} is false:
						add "&a%loop-value%" to {_list::*}
				set {_list} to "%{_list::*}%"
				if {_list} is "<none>" or " ":
					set {_list} to "&cNo Arenas Listed"
					
				message "&7List of Arenas: %{_list}%"
				message " "
				message "&a• Green = &aAvailable"
				message "&c• Red = &cUnavailable"
				stop
				
				
command /duel [<text>]:
	trigger:
		if {duel.in-duel.%player%} is not set:
			set {duel.in-duel.%player%} to false
		if arg 1 is set:
			set {_verif} to 0
			if "%arg 1%" is "%player%":
				message "&7Error, you can't duel yourself"
				stop
			loop all players:
				if "%arg 1%" is "%loop-player%":
					add 1 to {_verif}
					if {duel.in-duel.%loop-player%} is true:
						message "&e%loop-player% &7is already in a duel" to player
						stop
					message "&7You sent a duel request to &e%loop-player%" to player
					message "&e%player% &7has requested a duel. &a/accept &7or &c/deny" to loop-player
					set {duel.last-invite.%loop-player%} to player
					wait 5 minutes
					if {duel.in-duel.%loop-player%} is true:
						stop
					clear {duel.last-invite.%loop-player%}
					stop
			
			if {_verif} is 0:
				message "&7Error, &e%arg-1% &7is not &aconnected &7or does not exist"
				stop
		
		else:
			message "Correct Usage: /duel (Player)"
	
				
command /deny:
	trigger:
		if {duel.in-duel.%player%} is not set:
			set {duel.in-duel.%player%} to false
			
		if {duel.last-invite.%player%} is not set:
			message "&7Nobody has ask you for a duel recently"
			stop
			
		loop all players:
			if "%{duel.last-invite.%player%}%" is "%loop-player%":
				message "&7You refused the duel request of &e%loop-player%" to player
				message "&e%player% &7denied your duel request" to loop-player
				clear {duel.last-invite.%player%}
				stop
		clear {duel.last-invite.%player%}
		stop
		
		
command /accept:
	trigger:
		if {duel.in-duel.%player%} is not set:
			set {duel.in-duel.%player%} to false
			
		if {duel.last-invite.%player%} is not set:
			message "&7Nobody has ask you for a duel recently"
			stop
			
		set {_verif} to 0
		loop all players:
			if "%{duel.last-invite.%player%}%" is "%loop-player%":
				if {duel.in-duel.%loop-player%} is true:
					message "&7Error, this player is already in a duel"
					stop
					
				while {duel.in-duel.%player%} is false:
					loop {duel.arena.list::*}:
						if {duel.arena.setup.%loop-value-2%} is true:
							if {duel.arena.use.%loop-value-2%} is false:
								if {duel.in-duel.%loop-player%} is false:
									set {duel.in-duel.%player%} to true
									set {duel.in-duel.%loop-player%} to true
									
									set {duel.in-arena.%player%} to loop-value-2
									set {duel.in-arena.%loop-player%} to loop-value-2
									
									clear player's inventory
									clear loop-player's inventory
									set player's gamemode to adventure
									set loop-player's gamemode to adventure
									heal the player
									heal the loop-player
									set player's food to 10
									set loop-player's food to 10
									wait 1 tick
									set {_count} to 0
									wait 1 tick
									loop 36 times:
										set slot {_count} of player's inventory to {duel-kit.%{_count}%.main.%loop-value-2%}
										set slot {_count} of loop-player's inventory to {duel-kit.%{_count}%.main.%loop-value-2%}
										add 1 to {_count}
									set the helmet of player to {duel-kit.helmet.%loop-value-2%}
									set the chestplate of player to {duel-kit.chestplate.%loop-value-2%}
									set the leggings of player to {duel-kit.leggings.%loop-value-2%}
									set the boots of player to {duel-kit.boots.%loop-value-2%}
									
									set the helmet of loop-player to {duel-kit.helmet.%loop-value-2%}
									set the chestplate of loop-player to {duel-kit.chestplate.%loop-value-2%}
									set the leggings of loop-player to {duel-kit.leggings.%loop-value-2%}
									set the boots of loop-player to {duel-kit.boots.%loop-value-2%}
									
									teleport player at {duel.arena.spawn1.%loop-value-2%}
									teleport loop-player at {duel.arena.spawn2.%loop-value-2%}
									
									set {duel.arena.use.%loop-value-2%} to true
									
									message "&7Starting Duel" to player
									message "&7Starting Duel" to loop-player
									
									clear {duel.last-invite.%player%}
									clear {duel.last-invite.%loop-player%}
									stop
								else:
									message "&e%loop-player% &7is already in a duel"
									clear {duel.last-invite.%player%}
									stop
					wait 1 seconds
					message "&7No Arena Available, Searching..." to player			
					message "&7No Arena Available, Searching" to loop-player			
								
on death of player:
	if {duel.in-duel.%victim%} is true:
		clear drops
		if attacker is a player:
			set death message "{@prefix} %attacker% (&c&l%health of attacker% &c♥&f) won the duel against %victim%"
			set {duel.in-duel.%victim%} to false
			set {duel.in-duel.%attacker%} to false
			
			set {duel.arena.use.%{duel.in-arena.%attacker%}%} to false
			
			clear {duel.in-arena.%attacker%}
			clear {duel.in-arena.%victim%}
			clear attacker's inventory
			heal the attacker
			teleport attacker at {duel.lobby}
			set attacker's gamemode to survival
			set victim's gamemode to survival
			
			stop
			
		else:
			loop all players:
				if {duel.in-duel.%loop-player%} is true:
					if "%{duel.in-arena.%loop-player%}%" is "%{duel.in-arena.%victim%}%":
						set death message "{@prefix} %loop-player% (&c&l%health of loop-player% &c♥&f) won the duel against %victim%"
						set {duel.in-duel.%victim%} to false
						set {duel.in-duel.%loop-player%} to false
						
						set {duel.arena.use.%{duel.in-arena.%loop-player%}%} to false
						
						clear {duel.in-arena.%loop-player%}
						clear {duel.in-arena.%victim%}
						clear loop-player's inventory
						heal the loop-player
						teleport loop-player at {duel.lobby}
						set loop-player's gamemode to survival
						set victim's gamemode to survival
						
						stop
						
						
on quit:
	if {duel.in-duel.%player%} is true:
		loop all players:
			if {duel.in-duel.%loop-player%} is true:
				if "%{duel.in-arena.%loop-player%}%" is "%{duel.in-arena.%player%}%":
					set leave message to "{@prefix} %loop-player% (&c&l%health of loop-player% &c♥&f) won the duel against %player%"
					set {duel.in-duel.%player%} to false
					set {duel.in-duel.%loop-player%} to false
					
					set {duel.arena.use.%{duel.in-arena.%loop-player%}%} to false
					
					clear {duel.in-arena.%loop-player%}
					clear {duel.in-arena.%player%}
					clear loop-player's inventory
					heal the loop-player
					teleport loop-player at {duel.lobby}
					set loop-player's gamemode to survival
					set player's gamemode to survival
					
					stop
					
on join:
	clear {duel.in-duel.%player%}
